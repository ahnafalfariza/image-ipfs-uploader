import Head from 'next/head'
import { useState } from 'react'
import axios from 'axios'
import { useCopyToClipboard } from 'usehooks-ts'
import {
  Button,
  Layout,
  Upload,
  message,
  Typography,
  UploadFile,
  Radio,
  Space,
  Divider,
  Tooltip,
} from 'antd'

import { InboxOutlined, UploadOutlined, LinkOutlined } from '@ant-design/icons'

const { Dragger } = Upload
const { Text, Title } = Typography

const apiUrl = {
  mainnet: process.env.NEXT_PUBLIC_MAINNET_URL || '',
  testnet: process.env.NEXT_PUBLIC_TESTNET_URL || '',
}

export default function Home() {
  const [files, setFiles] = useState<UploadFile[]>()
  const [env, setEnv] = useState<'mainnet' | 'testnet'>('testnet')

  const [res, setRes] = useState<string[]>()
  const [isLoading, setIsLoading] = useState(false)

  const onSubmit = async () => {
    setIsLoading(true)
    setRes(undefined)
    try {
      const form = new FormData()
      files?.forEach((file) => form.append('files', file.originFileObj as Blob))
      const res = await axios.post(apiUrl[env], form)
      setRes(res.data.data as string[])
    } catch (error) {
      // @ts-ignore
      message.error(error.message)
    }
    setIsLoading(false)
  }

  return (
    <>
      <Head>
        <title>Image ipfs uploader</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Layout.Content
          style={{ padding: '16px', maxWidth: '640px', margin: 'auto' }}
        >
          <Title level={4}>Image Uploader</Title>
          <Divider />
          <Radio.Group
            onChange={(e) => setEnv(e.target.value)}
            defaultValue={env}
          >
            <Tooltip title="Kalo mainnet diupload ke CDN juga">
              <Radio value="mainnet"> Mainnet </Radio>
            </Tooltip>
            <Radio value="testnet"> Testnet </Radio>
          </Radio.Group>
          <Dragger
            name="file"
            multiple
            listType="picture"
            style={{ marginTop: '16px' }}
            onChange={(e) => setFiles(e.fileList)}
          >
            <p className="ant-upload-drag-icon">
              <InboxOutlined />
            </p>
            <p className="ant-upload-text">
              Click or drag file to this area to upload
            </p>
            <p className="ant-upload-hint">
              Support for a single or bulk upload.
            </p>
          </Dragger>
          <Button
            onClick={onSubmit}
            loading={isLoading}
            style={{ marginTop: '24px' }}
            icon={<UploadOutlined />}
          >
            {isLoading ? 'Uploading' : 'Upload'}
          </Button>
          <Divider />
          <ResponseResult res={res} />
        </Layout.Content>
      </main>
    </>
  )
}

const ResponseResult = ({ res }: { res?: string[] }) => {
  const [, copy] = useCopyToClipboard()

  if (!res || res.length === 0) return null

  return (
    <div>
      <Space direction="vertical" style={{ width: '100%' }}>
        <Text strong>Result:</Text>
        {res.map((ipfs) => {
          const hash = ipfs.replace('ipfs://', '')
          const hashLink = `https://ipfs.fleek.co/ipfs/${hash}`
          const hashLinkCdn = `https://paras-cdn.imgix.net/${hash}`
          return (
            <div
              key={hash}
              style={{
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center',
              }}
            >
              <Text
                onClick={() => {
                  message.success('Copied to clipboard')
                  copy(hash)
                }}
                style={{ cursor: 'pointer' }}
              >
                {hash}
              </Text>
              <div>
                <a href={hashLinkCdn} target="_blank" rel="noreferrer">
                  <LinkOutlined />
                  <Text>cdn</Text>
                </a>
                <a
                  style={{ marginLeft: '8px' }}
                  href={hashLink}
                  target="_blank"
                  rel="noreferrer"
                >
                  <LinkOutlined />
                  <Text>fleek</Text>
                </a>
              </div>
            </div>
          )
        })}
      </Space>
    </div>
  )
}
